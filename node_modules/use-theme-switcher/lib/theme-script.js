"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _terser = _interopRequireDefault(require("terser"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-undef */

/* eslint-disable no-var */
function setColorsByTheme(defaultDarkTheme, defaultLightTheme, themeStorageKey) {
  var mql = window.matchMedia("(prefers-color-scheme: dark)");
  var prefersDarkFromMQ = mql.matches;
  var persistedPreference = localStorage.getItem(themeStorageKey);
  var root = document.body;
  var colorMode = "";
  var hasUsedToggle = typeof persistedPreference === "string";

  if (hasUsedToggle) {
    colorMode = JSON.parse(persistedPreference);
  } else {
    colorMode = prefersDarkFromMQ ? defaultDarkTheme : defaultLightTheme;
    localStorage.setItem(themeStorageKey, JSON.stringify(colorMode));
  }

  root.classList.add(colorMode);
}

var ThemeScriptTag = function ThemeScriptTag(_ref) {
  var defaultDarkTheme = _ref.defaultDarkTheme,
      defaultLightTheme = _ref.defaultLightTheme,
      themeStorageKey = _ref.themeStorageKey,
      minify = _ref.minify;
  var themeScript = "(".concat(setColorsByTheme, ")(\n        '").concat(defaultDarkTheme, "',\n        '").concat(defaultLightTheme, "',\n        '").concat(themeStorageKey, "',\n      )");
  var minifiedThemeSrcript = minify ? _terser.default.minify(themeScript).code || "" : themeScript; // eslint-disable-next-line react/no-danger

  return /*#__PURE__*/_react.default.createElement("script", {
    dangerouslySetInnerHTML: {
      __html: minifiedThemeSrcript
    }
  });
};

ThemeScriptTag.defaultProps = {
  defaultDarkTheme: "theme-twitter",
  defaultLightTheme: "theme-midnightgreen",
  themeStorageKey: "theme",
  minify: true
};
var _default = ThemeScriptTag;
exports.default = _default;